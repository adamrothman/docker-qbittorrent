name: test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'

env:
  BUILD_TAG: qbittorrent:test
  CONTAINER_NAME: qbittorrent
  RUNNING_TIMEOUT: 120
  RUNNING_LOG_CHECK: "WebUI will be started shortly"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build
        uses: docker/bake-action@v2
        with:
          targets: image-local
        env:
          DEFAULT_TAG: ${{ env.BUILD_TAG }}
      -
        name: Start container
        run: |
          docker rm -f ${CONTAINER_NAME} > /dev/null 2>&1 || true
          docker run -d --name ${CONTAINER_NAME} ${BUILD_TAG}
      -
        name: Test run
        run: |
          SECONDS=0
          TIMEOUT=$((SECONDS + ${RUNNING_TIMEOUT}))
          while read LOGLINE; do
            echo ${LOGLINE}
            if [[ ${LOGLINE} == *"${RUNNING_LOG_CHECK}"* ]]; then
              echo "üéâ Container up!"
              break
            fi
            if [[ $SECONDS -gt ${TIMEOUT} ]]; then
              >&2 echo "‚ùå Failed to run ${CONTAINER_NAME} container"
              exit 1
            fi
          done < <(docker logs -f ${CONTAINER_NAME} 2>&1)

          CONTAINER_STATUS=$(docker container inspect --format "{{.State.Status}}" ${CONTAINER_NAME})
          if [[ ${CONTAINER_STATUS} != "running" ]]; then
            >&2 echo "‚ùå Container ${CONTAINER_NAME} returned status '$CONTAINER_STATUS'"
            exit 1
          fi
      -
        name: Logs
        if: always()
        run: |
          docker logs ${CONTAINER_NAME}
          docker rm -f ${CONTAINER_NAME} > /dev/null 2>&1 || true
